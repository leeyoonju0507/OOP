// 아래의 이론을 충분히 반영해서 지난번 과제를 업데이트 하세요
// store 앱을 실행하면 인증 스크린에서 로그인, 또는 회원가입 중 하나를 선택할 수 있어야 해요
// 회원가입을 선택하는 경우 회원가입 스크린에서 이메일, 비밀번호, 별명, 잔액, 유저의 타입(셀러, 바이어)을 입력받으세요
// 입력받은 정보에 문제가 없는 경우 csv 파일에 저장하세요
// 문제가 있는 경우 적절한 메세지를 보여주고 다시 인증 스크린을 보여주세요
// 입력받은 정보에 문제가 있는 경우는 아래와 같아요
// 1. 이미 이메일이 존재하는 경우
// 2. 잔액이 숫자가 아니거나 또는 음수인 경우
// 로그인을 선택하는 경우 로그인 스크린에서 이메일, 비밀번호를 입력받으세요
// 입력받은 정보에 문제가 없는 경우 유저의 별명, 유저의 타입, 유저의 잔액, 그리고 환영 메세지를 메인 스크린에 보여주세요
// 문제가 있는 경우 적절한 메세지를 보여주고 다시 인증 스크린을 보여주세요
// 입력받은 정보에 문제가 있는 경우는 아래와 같아요
// 1. 이메일이 없는 경우
// 2. 이메일이 있으나 비밀번호가 틀리는 경우

// Object Oriented Programming(OOP)
// 우리가 이번 프로젝트에서 설계하는 각 레이어의 역할은 다음과 같아요
// UI: 유저로부터 데이터를 입력받고, 요청에 대한 응답 데이터를 유저에게 보여줘요
// Service: 요청을 처리하기 위해서 데이터를 활용한 다양한 역할(서비스 로직)을 수행해요
// Repository: Service에서 필요한 데이터를 Database에서 가져와서 전달해요
// Domain: Service에서 요구하는 다양한 데이터의 복잡한 상호 작용(비즈니스 로직)을 담당해요
// Database: Service에서 사용하는 다양한 데이터를 파일에 쓰고, 읽고, 검색하고, 삭제해요
// OOP의 핵심은 한 객체가 자신만의 데이터와 그 데이터에 대한 책임을 가지도록 설계해서 다양한 데이터끼리의 상호작용에 대한 어려움울 해결하는 것에 있어요
// 각각의 레이어도 이와 같아요. 그리고 이렇게 객체의 집합인 하나의 레이어가 자신만의 책임을 가지도록 하는 것을 아키텍쳐 설계라고 불러요
// 좋은 개발자는 객체, 레이어를 설계할 때, 이 객체와 레이어를 사용하는 다른 객체와 다른 레이어에게 최상의 사용 경험을 제공한다는 관점에서 코드를 작성해요
